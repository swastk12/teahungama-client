{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\blog\\\\client\\\\client\\\\src\\\\components\\\\singlepost\\\\SingPost.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./singpost.css\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport Post from \"../../models/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SingPost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setpost] = useState({});\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMod, setUpdateMod] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setpost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      setUpdateMod(false);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: Post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), updateMod ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"singlePostTitleInput\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMod(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"singlePostAuthor\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/?user=${post.usrname}`,\n              className: \"links\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [post.username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), updateMod ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value),\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), updateMod && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \" Update \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingPost, \"WQvmwZIuyVjKcwFrJzw1iQwzHSQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = SingPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingPost\");","map":{"version":3,"sources":["C:/Users/user/Desktop/blog/client/client/src/components/singlepost/SingPost.jsx"],"names":["axios","useContext","useEffect","useState","useLocation","Link","Context","Post","SingPost","location","path","pathname","split","post","setpost","user","title","setTitle","desc","setDesc","updateMod","setUpdateMod","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","photo","e","target","value","usrname","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\"\r\nimport \"./singpost.css\"\r\nimport {Link} from \"react-router-dom\" \r\nimport { Context } from \"../../context/Context\";\r\nimport Post from \"../../models/post\"\r\n\r\nexport default function SingPost() {\r\n  const location = useLocation()\r\n  const path = location.pathname.split(\"/\")[2];\r\n  const [post, setpost] =useState({})\r\n \r\n  const { user } = useContext(Context);\r\n  const [title, setTitle] = useState(\"\")\r\n  const [desc, setDesc] = useState(\"\")\r\n  const [updateMod, setUpdateMod] = useState(false)\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n const getPost = async ()=>{\r\n   const res = await axios.get(\"/posts/\" + path);\r\n   setpost(res.data);\r\n   setTitle(res.data.title)\r\n   setDesc(res.data.desc)\r\n }\r\n getPost()\r\n  },[path])\r\n\r\n  const handleDelete = async ()=>{\r\n  try{\r\n    await  axios.delete(`/posts/${post._id}`,{data:{username: user.username}});\r\n    window.location.replace(\"/\")\r\n  }catch(err){\r\n}\r\n};\r\n\r\nconst handleUpdate = async ()=>{\r\n  try{\r\n    await  axios.put(`/posts/${post._id}`,{username: user.username, title, desc});\r\n\r\n    setUpdateMod(false)\r\n  }catch(err){\r\n\r\n  }\r\n}\r\n\r\n  return (\r\n    <div className=\"singlePost\">\r\n          <div className=\"singlePostWrapper\">\r\n            \r\n            {post.photo && (\r\n      <img className=\"singlePostImg\"\r\n      src ={ Post.photo}\r\n      alt =\"\"/>\r\n      )}{\r\n        updateMod ? <input type=\"text\" value={title} \r\n        onChange={(e) => setTitle(e.target.value)} className=\"singlePostTitleInput\" autoFocus /> :(\r\n          <h1 className=\"singlePostTitle\">\r\n          {title}\r\n          {post.username === user?.username &&(\r\n         <div className=\"singlePostEdit\">\r\n         <i className=\"singlePostIcon far fa-edit\" onClick={()=>setUpdateMod(true)}></i>\r\n         <i className=\"singlePostIcon far fa-trash-alt\" onClick={handleDelete}></i>\r\n       </div>\r\n        )}\r\n      </h1>\r\n\r\n      )\r\n      }\r\n\r\n\r\n        <div className=\"singlePostInfo\">\r\n          <span>\r\n            Author:\r\n            <b className=\"singlePostAuthor\">\r\n            <Link to = {`/?user=${post.usrname}`} className=\"links\">  \r\n            <b>{post.username} </b>\r\n            </Link>\r\n            </b>\r\n          </span>\r\n          <span>{new Date(post.createdAt).toDateString()}</span>\r\n        </div>\r\n        {updateMod ? ( <textarea className=\"singlePostDescInput\" value={desc}\r\n         onChange={(e) => setDesc(e.target.value)}\r\n        autoFocus/>):(\r\n          <p className=\"singlePostDesc\">\r\n          {desc}\r\n          </p>\r\n        )}\r\n        {updateMod && \r\n         <button className=\"singlePostButton\" onClick={handleUpdate}> Update </button>\r\n        }\r\n     \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}